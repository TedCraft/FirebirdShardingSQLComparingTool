{
  "Test1": {
    "Name": "E011 Numeric data types",
    "Case": [
      {
        "NameCase": "E011-01 INTEGER and SMALLINT data types",
        "Query1": "Create table E011_011 (INTD1 INTEGER,INTD2 INTEGER,INTD3 INTEGER,Primary key(INTD1))",
        "Query2": "Create table E011_012 (SMINTD1 SMALLINT,SMINTD2 SMALLINT,SMINTD3 SMALLINT,Primary key(SMINTD1))",
        "Query3": "COMMIT",
        "Query4": "Insert into E011_011 (INTD1,INTD2,INTD3) values (2147483647, -2147483647, 0)",
        "Query5": "Insert into E011_012 (SMINTD1,SMINTD2,SMINTD3) values (32766, -32766, 0)",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E011-02 REAL, DOUBLE PRECISION and FLOAT data types",
        "Query1": "Create table E011_021 (REALD1 REAL,REALD2 REAL,REALD3 REAL,Primary key(REALD1))",
        "Query2": "Create table E011_022 (DOUBLEP1 DOUBLE PRECISION,DOUBLEP2 DOUBLE PRECISION,DOUBLEP3 DOUBLE PRECISION,Primary key(DOUBLEP1))",
        "Query3": "Create table E011_023 (FLOAT1 FLOAT(10),FLOAT2 FLOAT(4),FLOAT3 FLOAT(8),Primary key(FLOAT1))",
        "Query4": "COMMIT",
        "Query5": "Insert into E011_021 (REALD1,REALD2,REALD3) values (-3.40*EXP(38), 3.40*EXP(38), 0)",
        "Query6": "Insert into E011_022 (DOUBLEP1,DOUBLEP2,DOUBLEP3) values (-2.22*EXP(308), 2.22*EXP(308), 0)",
        "Query7": "Insert into E011_023 (FLOAT1,FLOAT2,FLOAT3) values (543.23, 5434533453, 0)",
        "Query8": "COMMIT"
      },
      {
        "NameCase": "E011-03 DECIMAL and NUMERIC data types",
        "Query1": "Create table E011_031 (NUMD1 NUMERIC(10,5),NUMD2 NUMERIC(4,2),NUMD3 NUMERIC(9,4),Primary key(NUMD1))",
        "Query2": "Create table E011_032 (DEC1 DECIMAL(10,5),DEC2 DECIMAL(4,2),DEC3 DECIMAL(9,4),Primary key(DEC1))",
        "Query3": "COMMIT",
        "Query4": "Insert into E011_031 (NUMD1,NUMD2,NUMD3) values (128, -50, 19248)",
        "Query5": "Insert into E011_032 (DEC1,DEC2,DEC3) values (128, -50, 19248)",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E011-04 Arithmetic operators",
        "Query1": "SELECT INTD2 + 1000 FROM E011_011",
        "Query2": "SELECT INTD1 - 1000 FROM E011_011",
        "Query3": "SELECT SMINTD2 * 1 FROM E011_012",
        "Query4": "SELECT SMINTD2 / SMINTD1 FROM E011_012"
      },
      {
        "NameCase": "E011-05 Numeric comparison",
        "Query1": "SELECT * FROM E011_011 WHERE INTD1 > INTD2",
        "Query2": "SELECT * FROM E011_012 WHERE SMINTD2 < SMINTD3",
        "Query3": "SELECT * FROM E011_032 WHERE DEC1 = DEC2",
        "Query4": "SELECT * FROM E011_032 WHERE DEC3 >= DEC2",
        "Query5": "SELECT * FROM E011_031 WHERE NUMD1 <= NUMD3",
        "Query6": "SELECT * FROM E011_023 WHERE FLOAT1 <> FLOAT2"
      },
      {
        "NameCase": "E011-06 Implicit casting among the numeric data types",
        "Query1": "Create table E011_06 (CHARD CHAR(3), DOUBLEP DOUBLE PRECISION,INTD INTEGER,Primary key(CHARD))",
        "Query2": "COMMIT",
        "Query3": "Insert into E011_06 (CHARD,DOUBLEP,INTD) values ('128', -50.23, 19248)",
        "Query4": "COMMIT",
        "Query5": "SELECT INTD * DOUBLEP FROM E011_06"
      }
    ]
  },
  "Test2": {
    "Name": "E021 Character string types",
    "Case": [
      {
        "NameCase": "E021-01 CHARACTER data type",
        "Query1": "Create table E021_011 (CHARD CHAR(11),Primary key(CHARD))",
        "Query2": "Create table E021_012 (CHARACTERD CHARACTER(22),Primary key(CHARACTERD))",
        "Query3": "COMMIT",
        "Query4": "Insert into E021_011 (CHARD) values ('CharData')",
        "Query5": "Insert into E021_012 (CHARACTERD) values ('CharacterData')",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E021-02 CHARACTER VARYING data type",
        "Query1": "Create table E021_021 (VCAHRD VARCHAR(11),Primary key(VCAHRD))",
        "Query2": "Create table E021_022 (CHARVD CHARACTER VARYING(20),Primary key(CHARVD))",
        "Query3": "COMMIT",
        "Query4": "Insert into E021_021 (VCAHRD) values ('VarCharData')",
        "Query5": "Insert into E021_022 (CHARVD) values ('CharVaryingData')",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E021-03 Character literals",
        "Query1": "Select 'VCHARD VCHARD' from E021_021",
        "Query2": "Select 'CHARVD \n CHARVD' from E021_022",
        "Query3": "Select 'CHARD \\ CHARD' from E021_011"
      },
      {
        "NameCase": "E021-04 CHARACTER_LENGTH function",
        "Query1": "SELECT CHARACTER_LENGTH(CHARVD) from E021_022"
      },
      {
        "NameCase": "E021-05 OCTET_LENGTH function",
        "Query1": "SELECT OCTET_LENGTH(CHARVD) from E021_022"
      },
      {
        "NameCase": "E021-06 SUBSTRING function",
        "Query1": "SELECT CHARVD, SUBSTRING(CHARVD FROM 3 FOR 4) as FirstSymbol, SUBSTRING(CHARVD FROM 3 FOR 2) as ThirdAndFourthCharacters from E021_022"
      },
      {
        "NameCase": "E021-07 Character concatenation",
        "Query1": "SELECT CHARACTERD || CHARACTERD from E021_012"
      },
      {
        "NameCase": "E021-08 UPPER and LOWER functions",
        "Query1": "SELECT CHARACTERD,UPPER(CHARACTERD) as UpSymbol, LOWER(CHARACTERD) as LowSymbol from E021_012"
      },
      {
        "NameCase": "E021-09 TRIM function",
        "Query1": "Create table E021_09 (TRTEST VARCHAR(11),Primary key(TRTEST))",
        "Query2": "COMMIT",
        "Query3": "Insert into E021_09 (TRTEST) values ('.,! Test.')",
        "Query4": "COMMIT",
        "Query5": "SELECT TRIM ('.,! ' from TRTEST) as ResTrimTest  from E021_09"
      },
      {
        "NameCase": "E021-10 Implicit casting among the fixed-length and variablelength character string types",
        "Query1": "Create table E021_10 (CHARD1 CHAR(35),CHARD2 CHAR(10),Primary key(CHARD1))",
        "Query2": "COMMIT",
        "Query3": "Insert into E021_10 (CHARD1,CHARD2) values ('abcdefhgdg','1234567')",
        "Query4": "COMMIT",
        "Query5": "SELECT CAST(CHARD1 as VARCHAR(30)) from E021_10",
        "Query6": "SELECT CAST(CHARD2 as VARCHAR(30)) from E021_10"
      },
      {
        "NameCase": "E021-11 POSITION function",
        "Query1": "Create table E021_11 (CHARD CHAR(10),Primary key(CHARD))",
        "Query2": "COMMIT",
        "Query3": "Insert into E021_11 (CHARD) values ('P3SITION1')",
        "Query4": "COMMIT",
        "Query5": "SELECT POSITION('3' IN CHARD) as PositionRes from E021_11"
      },
      {
        "NameCase": "E021-12 Character comparison",
        "Query1": "Create table E021_12 (CHARD1 CHAR(10),CHARD2 CHAR(15),CHARD3 CHAR(10), Primary key(CHARD1))",
        "Query2": "COMMIT",
        "Query3": "Insert into E021_12 (CHARD1,CHARD2,CHARD3) values ('String213','Str23','String213')",
        "Query4": "COMMIT",
        "Query5": "SELECT * FROM E021_12 WHERE CHARD1 LIKE 'Str%'",
        "Query6": "SELECT * FROM E021_12 WHERE CHARD2 NOT LIKE '23'"
      }
    ]
  },
  "Test3": {
    "Name": "E031 Identifiers",
    "Case": [
      {
        "NameCase": "E031-01 Delimited identifiers",
        "Query1": "SELECT \"CHARD1\" from E021_12"
      },
      {
        "NameCase": "E031-02 Lower case identifiers",
        "Query1": "SELECT chard1 from E021_12"
      },
      {
        "NameCase": "E031-03 Trailing underscore",
        "Query1": "Create table E031_03 (CHARD_ CHAR(10), Primary key(CHARD_))",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test4": {
    "Name": "E051 Basic query specification",
    "Case": [
      {
        "NameCase": "E051-01 SELECT DISTINCT",
        "Query1": "CREATE TABLE Persons (PersonID int,LastName varchar(255),FirstName varchar(255),Country varchar(255),City varchar(255))",
        "Query2": "COMMIT",
        "Query3": "Insert into Persons (PersonID,LastName,FirstName,Country,City) values (0,'Ivan','Ivanov','Russia','Moscow')",
        "Query4": "Insert into Persons (PersonID,LastName,FirstName,Country,City) values (0,'Ivan','Ivanov','Russia','Moscow')",
        "Query5": "Insert into Persons (PersonID,LastName,FirstName,Country,City) values (0,'Ivan','Ivanov','Russia','Moscow')",
        "Query6": "COMMIT",
        "Query7": "SELECT DISTINCT * FROM Persons"
      },
      {
        "NameCase": "E051-02 GROUP BY clause",
        "Query1": "CREATE TABLE PersonsNew (PersonID int,LastName varchar(255),FirstName varchar(255),Country varchar(255),City varchar(255),Primary key(PersonID));",
        "Query2": "COMMIT",
        "Query3": "Insert into PersonsNew (PersonID,LastName,FirstName,Country,City) values (0,'Ivan','Ivanov','Russia','Moscow')",
        "Query4": "Insert into PersonsNew (PersonID,LastName,FirstName,Country,City) values (1,'Michail','Petrov','Russia','St.Pitersburg')",
        "Query5": "Insert into PersonsNew (PersonID,LastName,FirstName,Country,City) values (2,'Sergey','Vesylev','Russia','Vladivostok')",
        "Query6": "Insert into PersonsNew (PersonID,LastName,FirstName,Country,City) values (3,'Peter','Jacson','USA','New-York')",
        "Query7": "Insert into PersonsNew (PersonID,LastName,FirstName,Country,City) values (4,'Claus','Jorgingston','USA','Chicago')",
        "Query8": "COMMIT",
        "Query9": "SELECT Country, COUNT(*) AS PersonCount FROM PersonsNew GROUP BY Country;"
      },
      {
        "NameCase": "E051-04 GROUP BY can contain columns not in '<select list>'",
        "Query1": "SELECT COUNT(*) FROM PersonsNew GROUP BY Country;"
      },
      {
        "NameCase": "E051-05 Select list items can be renamed",
        "Query1": "SELECT PersonID AS PerID, LastName AS LN, City AS C FROM PersonsNew"
      },
      {
        "NameCase": "E051-06 HAVING clause",
        "Query1": "SELECT Country, COUNT(*) AS PersonCount from PersonsNew GROUP BY Country HAVING COUNT(*) > 2"
      },
      {
        "NameCase": "E051-07 Qualified * in select list",
        "Query1": "SELECT * FROM (SELECT Country, COUNT(*) AS PersonCount FROM PersonsNew GROUP BY Country)"
      },
      {
        "NameCase": "E051-08 Correlation names in the FROM clause",
        "Query1": "SELECT * FROM (SELECT Country FROM PersonsNew GROUP BY Country) AS T1 where T1.Country = 'USA'"
      },
      {
        "NameCase": "E051-09 Rename columns in the FROM clause",
        "Query1": "SELECT * FROM (SELECT Country, COUNT(*) AS PersonCount FROM PersonsNew GROUP BY Country) AS T1"
      }
    ]
  },
  "Test5": {
    "Name": "E061 Basic predicates and search conditions",
    "Case": [
      {
        "NameCase": "E061-01 Comparison predicate",
        "Query1": "CREATE TABLE Computers (ID int ,Model varchar(255),SpeedCPU int,Ram int,HDD int,Price float,Primary key(ID));",
        "Query2": "COMMIT",
        "Query3": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (0,'1084','500','2048','500',1200.90)",
        "Query4": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (1,'1268','960','256','256',800.00)",
        "Query5": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (2,'1190','2200','128','128',350.50)",
        "Query6": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (3,'1260','340','4096','1024',900.00)",
        "Query7": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (4,'1090','400','32','64',1100.00)",
        "Query8": "COMMIT",
        "Query9": "SELECT * FROM Computers WHERE SpeedCPU >= 600 and Price < 1000"
      },
      {
        "NameCase": "E061-02 BETWEEN predicate",
        "Query1": "SELECT model, SpeedCPU FROM Computers WHERE Price BETWEEN 500 AND 900;"
      },
      {
        "NameCase": "E061-03 IN predicate with list of values",
        "Query1": "SELECT model, HDD FROM Computers WHERE HDD IN (128,500);"
      },
      {
        "NameCase": "E061-04 LIKE predicate",
        "Query1": "SELECT * FROM Computers WHERE Model LIKE '10%';"
      },
      {
        "NameCase": "E061-05 LIKE predicate: ESCAPE clause",
        "Query1": "CREATE TABLE Escapepred (Name varchar(25));",
        "Query2": "COMMIT",
        "Query3": "Insert into Escapepred (Name) values ('Michaeil_')",
        "Query4": "Insert into Escapepred (Name) values ('Ivan')",
        "Query5": "Insert into Escapepred (Name) values ('Petr')",
        "Query6": "Insert into Escapepred (Name) values ('_Fedor_')",
        "Query7": "COMMIT",
        "Query8": "SELECT Name FROM Escapepred WHERE Name LIKE '%#_%' ESCAPE '#'"
      },
      {
        "NameCase": "E061-06 NULL predicate",
        "Query1": "Insert into Computers (ID,Model,SpeedCPU,Ram,HDD,Price) values (5,'1360','2600','4096',null,2000.00);",
        "Query2": "COMMIT",
        "Query3": "SELECT * FROM Computers where HDD IS NULL",
        "Query4": "SELECT * FROM Computers where HDD IS NOT NULL"
      },
      {
        "NameCase": "E061-07 Quantified comparison predicate",
        "Query1": "ALTER TABLE Computers ADD Namecompany Varchar(100)",
        "Query2": "COMMIT",
        "Query3": "UPDATE Computers SET Namecompany = 'INTEL' WHERE Id IN (0,3)",
        "Query4": "UPDATE Computers SET Namecompany = 'ASUS' WHERE Id IN (1,2)",
        "Query5": "UPDATE Computers SET Namecompany = 'AMD' WHERE Id IN (4,5)",
        "Query6": "COMMIT",
        "Query7": "CREATE TABLE Company (ID int, NameCompany Varchar(100), TypeProduct Varchar(20),Primary key(ID));",
        "Query8": "COMMIT",
        "Query9": "Insert into Company (ID,NameCompany,TypeProduct) values (0,'INTEL','pc');",
        "Query10": "Insert into Company (ID,NameCompany,TypeProduct) values (1,'AMD','pc');",
        "Query11": "Insert into Company (ID,NameCompany,TypeProduct) values (2,'ASUS','pc');",
        "Query12": "Insert into Company (ID,NameCompany,TypeProduct) values (3,'ASUS','laptop');",
        "Query13": "Insert into Company (ID,NameCompany,TypeProduct) values (4,'DELL','pc');",
        "Query14": "Insert into Company (ID,NameCompany,TypeProduct) values (5,'DELL','laptop');",
        "Query15": "COMMIT",
        "Query16": "SELECT NameCompany FROM Company WHERE TypeProduct = 'pc' AND NOT NameCompany = ANY (SELECT NameCompany FROM Computers);",
        "Query17": "SELECT NameCompany FROM Company WHERE TypeProduct = 'pc' AND NOT NameCompany = SOME (SELECT NameCompany FROM Computers);"
      },
      {
        "NameCase": "E061-08 EXISTS predicate",
        "Query1": "Insert into Company (ID,NameCompany,TypeProduct) values (6,'ASUS','printer');",
        "Query2": "COMMIT",
        "Query3": "SELECT NameCompany FROM Company as C1 WHERE TypeProduct = 'pc' AND EXISTS (SELECT NameCompany FROM Company WHERE TypeProduct = 'printer' and NameCompany = C1.NameCompany);"
      },
      {
        "NameCase": "E061-09 Subqueries in comparison predicate",
        "Query1": "SELECT Model FROM Computers WHERE NameCompany = (SELECT NameCompany FROM Company WHERE NameCompany = 'ASUS' AND TypeProduct = 'pc');"
      },
      {
        "NameCase": "E061-11 Subqueries in IN predicate",
        "Query1": "SELECT Model FROM Computers WHERE SpeedCPU IN(SELECT SpeedCPU FROM Computers WHERE SpeedCPU IN (2600,960));"
      },
      {
        "NameCase": "E061-12 Subqueries in quantified comparison predicate",
        "Query1": "SELECT DISTINCT NameCompany FROM Company WHERE TypeProduct = 'pc' AND NameCompany = (SELECT DISTINCT NameCompany FROM Company WHERE NOT NameCompany = ANY (SELECT NameCompany FROM Computers));"
      },
      {
        "NameCase": "E061-13 Correlated subqueries",
        "Query1": "SELECT Id, Model, NameCompany FROM Computers C1 WHERE SpeedCPU = (SELECT MAX(SpeedCPU) from Computers C2 where C1.Id = C2.Id);"
      },
      {
        "NameCase": "E061-14 Search condition",
        "Query1": "SELECT Model, Price FROM Computers WHERE SpeedCPU > 800 AND HDD < 512;"
      }
    ]
  },
  "Test6": {
    "Name": "E071 Basic query expressions",
    "Case": [
      {
        "NameCase": "E071-01 UNION DISTINCT table operator",
        "Query1": "CREATE TABLE Laptop (ID int ,Model varchar(255),SpeedCPU int,Ram int,HDD int,Price float, Namecompany varchar(100),Primary key(ID));",
        "Query2": "COMMIT",
        "Query3": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (0,'5532','1500','2048','500',4200.90,'DELL')",
        "Query4": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (1,'9245','360','256','256',2800.00,'ASUS')",
        "Query5": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (2,'4503','1200','128','128',3350.50,'ASUS')",
        "Query6": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (3,'5500','1340','4096','1024',1380.00,'DELL')",
        "Query7": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (4,'9087','900','32','64',2500.00,'DELL')",
        "Query8": "Insert into Laptop (ID,Model,SpeedCPU,Ram,HDD,Price,Namecompany) values (5,'9083','900','32','128',2500.00,'DELL')",
        "Query9": "COMMIT",
        "Query10": "SELECT Price FROM Computers UNION SELECT Price FROM Laptop"
      },
      {
        "NameCase": "E071-02 UNION ALL table operator",
        "Query1": "SELECT Price FROM Computers UNION ALL SELECT Price FROM Laptop"
      },
      {
        "NameCase": "E071-03 EXCEPT DISTINCT table operator",
        "Query1": "SELECT Price FROM Laptop EXCEPT SELECT Price FROM Computers"
      },
      {
        "NameCase": "E071-05 Columns combined via table operators need not have exactly the same data type",
        "Query1": "SELECT Price FROM Laptop UNION SELECT Namecompany FROM Computers",
        "Query2": "SELECT Price FROM Laptop UNION ALL SELECT Namecompany FROM Computers"
      },
      {
        "NameCase": "E071-06 Table operators in subqueries",
        "Query1": "SELECT distinct Namecompany FROM Company WHERE Namecompany in (SELECT Namecompany FROM Computers WHERE Price < 1000 UNION ALL SELECT Namecompany FROM Laptop WHERE Price < 2000)"
      }
    ]
  },
  "Test7": {
    "Name": "E081 Basic Privileges",
    "Case": [
      {
        "NameCase": "E081-01 SELECT privilege at the table level",
        "Query1": "CREATE USER E081_01 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT SELECT ON Company to E081_01",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_01",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-02 DELETE privilege",
        "Query1": "CREATE USER E081_02 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT DELETE ON Company to E081_02",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_02",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-03 INSERT privilege at the table level",
        "Query1": "CREATE USER E081_03 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT INSERT ON Company to E081_03",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_03",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-04 UPDATE privilege at the table level",
        "Query1": "CREATE USER E081_04 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT UPDATE ON Company to E081_04",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_04",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-05 UPDATE privilege at the column level",
        "Query1": "CREATE USER E081_05 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT UPDATE (NameCompany) ON Company to E081_05",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_05",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-06 REFERENCES privilege at the table levell",
        "Query1": "CREATE USER E081_06 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT REFERENCES ON Company to E081_06",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_06",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-07 REFERENCES privilege at the column level",
        "Query1": "CREATE USER E081_07 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT REFERENCES (NameCompany) ON Company to E081_07",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_07",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-08 WITH GRANT OPTION",
        "Query1": "CREATE USER E081_08 PASSWORD '12345678'",
        "Query2": "COMMIT",
        "Query3": "GRANT INSERT ON Company to E081_08",
        "Query4": "COMMIT",
        "Query5": "DROP USER E081_08",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E081-09 USAGE privilege",
        "Query1": "CREATE ROLE E081_09",
        "Query2": "CREATE SEQUENCE SEQE081_09",
        "Query3": "COMMIT",
        "Query4": "GRANT USAGE ON SEQUENCE SEQE081_09 TO ROLE E081_09",
        "Query5": "COMMIT"
      },
      {
        "NameCase": "E081-10 EXECUTE privilege",
        "Query1": "CREATE USER E081_10 PASSWORD '12345678'",
        "Query2": "CREATE PROCEDURE PROCE081_10 AS BEGIN END",
        "Query3": "COMMIT",
        "Query4": "GRANT EXECUTE ON PROCEDURE PROCE081_10 to E081_10",
        "Query5": "COMMIT",
        "Query6": "DROP USER E081_10",
        "Query7": "COMMIT"
      }
    ]
  },
  "Test8": {
    "Name": "E091 Set functions",
    "Case": [
      {
        "NameCase": "E091-01 AVG",
        "Query1": "SELECT AVG(price) FROM Computers"
      },
      {
        "NameCase": "E091-02 COUNT",
        "Query1": "SELECT COUNT(id) FROM Computers"
      },
      {
        "NameCase": "E091-03 MAX",
        "Query1": "SELECT MAX(RAM) FROM Computers"
      },
      {
        "NameCase": "E091-04 MIN",
        "Query1": "SELECT MIN(HDD) FROM Computers"
      },
      {
        "NameCase": "E091-05 SUM",
        "Query1": "SELECT SUM(price) FROM Computers"
      },
      {
        "NameCase": "E091-06 ALL",
        "Query1": "SELECT ALL namecompany FROM Computers"
      },
      {
        "NameCase": "E091-07 DISTINCT",
        "Query1": "SELECT DISTINCT namecompany FROM Computers"
      }
    ]
  },
  "Test9": {
    "Name": "E101 Basic data manipulation",
    "Case": [
      {
        "NameCase": "E101-01 INSERT statement",
        "Query1": "Insert into Company (ID,NameCompany,TypeProduct) values (7,'Apple','pc')",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E101-03 Searched UPDATE statement",
        "Query1": "UPDATE Computers SET price = 3000 WHERE speedcpu > 1000",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E101-04 Searched DELETE statement",
        "Query1": "DELETE FROM Company WHERE NameCompany = 'Apple'",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test10": {
    "Name": "E111 Single row SELECT statement",
    "Case": [
      {
        "NameCase": "E111 Single row SELECT statement",
        "Query1": "SELECT * FROM Computers WHERE id = 1"
      }
    ]
  },
  "Test11": {
    "Name": "E121 Basic cursor support",
    "Case": [
      {
        "NameCase": "E121-01 DECLARE CURSOR",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS1\nbefore update on Company\nAS\nDECLARE cursor1 CURSOR for\n(select id, namecompany, typeproduct from company where typeproduct = 'pc');\nBEGIN\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-02 ORDER BY columns need not be in select list",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS2\nbefore update on Company\nAS\nDECLARE cursor2 CURSOR for\n(select id, namecompany from company order by typeproduct);\nbegin\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-03 Value expressions in ORDER BY clause",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS3\nbefore update on Company\nAS\nDECLARE cursor3 CURSOR for\n(select id, namecompany, typeproduct as type from company order by type);\nbegin\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-04 OPEN statement",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS4\nbefore update on Company\nAS\nDECLARE cursor4 CURSOR for\n(select id, namecompany from company order by namecompany desc);\nbegin\nopen cursor4;\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-06 Positioned UPDATE statement",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS5\nbefore update on Company\nAS\nDECLARE cursor5 CURSOR for\n(select id, namecompany from company where typeproduct = 'pc' order by typeproduct desc);\nbegin\nopen cursor5;\nupdate company set typeproduct = 'personal computer' where current of cursor5;\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-07 Positioned DELETE statement",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS6\nbefore update on Company\nAS\nDECLARE cursor6 CURSOR for\n(select id, namecompany from company where typeproduct = 'pc' order by typeproduct desc);\nbegin\nopen cursor6;\ndelete from company where current of cursor6;\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-08 CLOSE statement",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS7\nbefore update on Company\nAS\nDECLARE cursor7 CURSOR for\n(select id, namecompany from company where typeproduct = 'pc' order by typeproduct desc);\nbegin\nopen cursor7;\ndelete from company where current of cursor7;\nclose cursor7;\nend",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-09 FETCH statement: implicit NEXT",
        "Query1": "CREATE OR ALTER PROCEDURE GET_NAMECOMPANY\nRETURNS (NAMECOM CHAR(30))\nAS DECLARE curs1 CURSOR FOR (Select namecompany from Company where typeproduct = 'pc');\nBEGIN\nOPEN curs1;\nWHILE (1=1) DO\nBEGIN\nFETCH curs1 INTO :NAMECOM;\nIF (ROW_COUNT = 0) THEN\nLEAVE;\nSUSPEND;\nEND\nCLOSE curs1;\nEND;",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "E121-17 WITH HOLD cursors",
        "Query1": "CREATE OR ALTER TRIGGER DECCURS1\nbefore update on Company\nAS\nDECLARE cursor1 CURSOR WITH HOLD for\n(select id, namecompany from company where typeproduct = 'pc' order by typeproduct desc);\nbegin\nopen cursor1;\nclose cursor1;\nend",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test12": {
    "Name": "E131 Null value support (nulls in lieu of values)",
    "Case": [
      {
        "NameCase": "E131 Null value support (nulls in lieu of values)",
        "Query1": "CREATE TABLE E131 (ID int ,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E131 (ID,Chdata,Intdata,Datedata) values (0,null,null,null)",
        "Query4": "COMMIT"
      }
    ]
  },
  "Test13": {
    "Name": "E141 Basic integrity constraints",
    "Case": [
      {
        "NameCase": "E141-01 NOT NULL constraints",
        "Query1": "CREATE TABLE E141_01 (ID int ,Chdata varchar(255) NOT NULL,Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_01 (ID,Chdata,Intdata,Datedata) values (0,null,null,null)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E141-02 UNIQUE constraints of NOT NULL columns",
        "Query1": "CREATE TABLE E141_02 (ID int NOT NULL UNIQUE ,Chdata varchar(255),Intdata int,Datedata DATE)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_02 (ID,Chdata,Intdata,Datedata) values (0,null,null,null)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E141-03 PRIMARY KEY constraints",
        "Query1": "CREATE TABLE E141_03 (ID int,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_03 (ID,Chdata,Intdata,Datedata) values (0,null,null,null)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E141-04 Basic FOREIGN KEY constraint\nwith the NO ACTION\ndefault for both referential\ndelete action and referential\nupdate action.",
        "Query1": "CREATE TABLE E141_041 (ID int,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "CREATE TABLE E141_042 (ID int,id_041 int, Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID), Foreign key(id_041) REFERENCES E141_041 (id))",
        "Query4": "COMMIT",
        "Query5": "INSERT INTO E141_041 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',10,'24.06.2022')",
        "Query6": "INSERT INTO E141_042 (ID,id_041,Chdata,Intdata,Datedata) values (0,0,'ROW1_1',101,'25.06.2022')",
        "Query7": "COMMIT",
        "Query8": "UPDATE E141_041 SET id = 0",
        "Query9": "DELETE FROM E141_041 WHERE id = 0",
        "Query10": "COMMIT"
      },
      {
        "NameCase": "E141-06 CHECK constraints",
        "Query1": "CREATE TABLE E141_06 (ID int,Chdata varchar(255),Intdata int CHECK (Intdata > 10),Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_06 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',9,'24.06.2022')",
        "Query4": "INSERT INTO E141_06 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',11,'24.06.2022')",
        "Query5": "COMMIT",
        "Query6": "UPDATE E141_06 SET IntData = 4",
        "Query7": "COMMIT"
      },
      {
        "NameCase": "E141-07 Column defaults",
        "Query1": "CREATE TABLE E141_07 (ID int,Chdata varchar(255) DEFAULT 'CharData',Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_07 (ID,Intdata,Datedata) values (0,9,'24.06.2022')",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E141-08 NOT NULL inferred on PRIMARY KEY",
        "Query1": "CREATE TABLE E141_08 (ID int UNIQUE ,Chdata varchar(255),Intdata int,Datedata DATE)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E141_08 (ID,Chdata,Intdata,Datedata) values (null,null,null,null)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E141-10 Names in a foreign key can be specified in any order",
        "Query1": "CREATE TABLE E141_101 (ID int,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(IntData),Primary key(ID))",
        "Query2": "CREATE TABLE E141_102 (ID int, Chdata varchar(255),Intdata int,Datedata DATE,id_141 int,Primary key(ID), Foreign key (id_041) REFERENCES E141_101 (id))",
        "Query3": "COMMIT"
      }
    ]
  },
  "Test14": {
    "Name": "E151 Transaction support",
    "Case": [
      {
        "NameCase": "E151_01 COMMIT statement",
        "Query1": "CREATE TABLE E151_01 (ID int ,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E151_01 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',151,'26.06.2022')",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "E151_02 ROLLBACK statement",
        "Query1": "CREATE TABLE E151_02 (ID int ,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E151_02 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',151,'26.06.2022')",
        "Query4": "ROLLBACK"
      }
    ]
  },
  "Test15": {
    "Name": "E152 Basic SET TRANSACTION",
    "Case": [
      {
        "NameCase": "E152_01 SET TRANSACTION statement:\nISOLATION LEVEL\nSERIALIZABLE clause",
        "Query1": "CREATE TABLE E152_01 (ID int ,Chdata varchar(255),Intdata int,Datedata DATE,Primary key(ID))",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO E152_01 (ID,Chdata,Intdata,Datedata) values (0,'ROW1',151,'26.06.2022')",
        "Query4": "COMMIT",
        "Query5": "SET TRANSACTION SERIALIZABLE ISOLATION LEVEL SNAPSHOT TABLE STABILITY",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "E152_02 SET TRANSACTION statement:\nREAD ONLY and\nREAD WRITE clauses",
        "Query1": "SET TRANSACTION READ ONLY ISOLATION LEVEL SNAPSHOT TABLE STABILITY",
        "Query2": "COMMIT",
        "Query3": "SET TRANSACTION READ WRITE ISOLATION LEVEL SNAPSHOT TABLE STABILITY",
        "Query4": "COMMIT"
      }
    ]
  },
  "Test16": {
    "Name": "E153 Updatable queries with subqueries",
    "Case": [
      {
        "NameCase": "E153 Updatable queries with subqueries",
        "Query1": "CREATE TABLE AGENTS (AGENT_CODE CHAR(6) NOT NULL PRIMARY KEY,AGENT_NAME CHAR(40), WORKING_AREA CHAR(35), COMMISSION NUMERIC(10,2), PHONE_NO CHAR(15), COUNTRY VARCHAR(25))",
        "Query2": "CREATE TABLE CUSTOMER (CUST_CODE VARCHAR(6) NOT NULL PRIMARY KEY, CUST_NAME VARCHAR(40) NOT NULL, CUST_CITY CHAR(35), WORKING_AREA VARCHAR(35) NOT NULL, CUST_COUNTRY VARCHAR(20) NOT NULL, GRADE NUMERIC, OPENING_AMT NUMERIC(12,2) NOT NULL, RECEIVE_AMT NUMERIC(12,2) NOT NULL, PAYMENT_AMT NUMERIC(12,2) NOT NULL, OUTSTANDING_AMT NUMERIC(12,2) NOT NULL, PHONE_NO VARCHAR(17) NOT NULL, AGENT_CODE CHAR(6) NOT NULL REFERENCES AGENTS)",
        "Query3": "COMMIT",
        "Query4": "INSERT INTO AGENTS VALUES ('A007', 'Ramasundar', 'Bangalore', '0.15', '077-25814763', '')",
        "Query5": "INSERT INTO AGENTS VALUES ('A003', 'Alex ', 'London', '0.13', '075-12458969', '')",
        "Query6": "INSERT INTO AGENTS VALUES ('A008', 'Alford', 'New York', '0.12', '044-25874365', '')",
        "Query7": "INSERT INTO AGENTS VALUES ('A011', 'Ravi Kumar', 'Bangalore', '0.15', '077-45625874', '')",
        "Query8": "INSERT INTO AGENTS VALUES ('A010', 'Santakumar', 'Chennai', '0.14', '007-22388644', '')",
        "Query9": "INSERT INTO AGENTS VALUES ('A012', 'Lucida', 'San Jose', '0.12', '044-52981425', '')",
        "Query10": "INSERT INTO AGENTS VALUES ('A005', 'Anderson', 'Brisban', '0.13', '045-21447739', '')",
        "Query11": "INSERT INTO AGENTS VALUES ('A001', 'Subbarao', 'Bangalore', '0.14', '077-12346674', '')",
        "Query12": "INSERT INTO AGENTS VALUES ('A002', 'Mukesh', 'Mumbai', '0.11', '029-12358964', '')",
        "Query13": "INSERT INTO AGENTS VALUES ('A006', 'McDen', 'London', '0.15', '078-22255588', '')",
        "Query14": "INSERT INTO AGENTS VALUES ('A004', 'Ivan', 'Torento', '0.15', '008-22544166', '')",
        "Query15": "INSERT INTO AGENTS VALUES ('A009', 'Benjamin', 'Hampshair', '0.11', '008-22536178', '')",
        "Query16": "INSERT INTO CUSTOMER VALUES ('C00013', 'Holmes', 'London', 'London', 'UK', '2', '6000.00', '5000.00', '7000.00', '4000.00', 'BBBBBBB', 'A003')",
        "Query17": "INSERT INTO CUSTOMER VALUES ('C00001', 'Micheal', 'New York', 'New York', 'USA', '2', '3000.00', '5000.00', '2000.00', '6000.00', 'CCCCCCC', 'A008')",
        "Query18": "INSERT INTO CUSTOMER VALUES ('C00020', 'Albert', 'New York', 'New York', 'USA', '3', '5000.00', '7000.00', '6000.00', '6000.00', 'BBBBSBB', 'A008')",
        "Query19": "INSERT INTO CUSTOMER VALUES ('C00025', 'Ravindran', 'Bangalore', 'Bangalore', 'India', '2', '5000.00', '7000.00', '4000.00', '8000.00', 'AVAVAVA', 'A011')",
        "Query20": "INSERT INTO CUSTOMER VALUES ('C00024', 'Cook', 'London', 'London', 'UK', '2', '4000.00', '9000.00', '7000.00', '6000.00', 'FSDDSDF', 'A006')",
        "Query21": "INSERT INTO CUSTOMER VALUES ('C00015', 'Stuart', 'London', 'London', 'UK', '1', '6000.00', '8000.00', '3000.00', '11000.00', 'GFSGERS', 'A003')",
        "Query22": "INSERT INTO CUSTOMER VALUES ('C00002', 'Bolt', 'New York', 'New York', 'USA', '3', '5000.00', '7000.00', '9000.00', '3000.00', 'DDNRDRH', 'A008')",
        "Query23": "INSERT INTO CUSTOMER VALUES ('C00018', 'Fleming', 'Brisban', 'Brisban', 'Australia', '2', '7000.00', '7000.00', '9000.00', '5000.00', 'NHBGVFC', 'A005')",
        "Query24": "INSERT INTO CUSTOMER VALUES ('C00021', 'Jacks', 'Brisban', 'Brisban', 'Australia', '1', '7000.00', '7000.00', '7000.00', '7000.00', 'WERTGDF', 'A005')",
        "Query25": "INSERT INTO CUSTOMER VALUES ('C00019', 'Yearannaidu', 'Chennai', 'Chennai', 'India', '1', '8000.00', '7000.00', '7000.00', '8000.00', 'ZZZZBFV', 'A010')",
        "Query26": "INSERT INTO CUSTOMER VALUES ('C00005', 'Sasikant', 'Mumbai', 'Mumbai', 'India', '1', '7000.00', '11000.00', '7000.00', '11000.00', '147-25896312', 'A002')",
        "Query27": "INSERT INTO CUSTOMER VALUES ('C00007', 'Ramanathan', 'Chennai', 'Chennai', 'India', '1', '7000.00', '11000.00', '9000.00', '9000.00', 'GHRDWSD', 'A010')",
        "Query28": "INSERT INTO CUSTOMER VALUES ('C00022', 'Avinash', 'Mumbai', 'Mumbai', 'India', '2', '7000.00', '11000.00', '9000.00', '9000.00', '113-12345678','A002')",
        "Query29": "INSERT INTO CUSTOMER VALUES ('C00004', 'Winston', 'Brisban', 'Brisban', 'Australia', '1', '5000.00', '8000.00', '7000.00', '6000.00', 'AAAAAAA', 'A005')",
        "Query30": "INSERT INTO CUSTOMER VALUES ('C00023', 'Karl', 'London', 'London', 'UK', '0', '4000.00', '6000.00', '7000.00', '3000.00', 'AAAABAA', 'A006')",
        "Query31": "INSERT INTO CUSTOMER VALUES ('C00006', 'Shilton', 'Torento', 'Torento', 'Canada', '1', '10000.00', '7000.00', '6000.00', '11000.00', 'DDDDDDD', 'A004')",
        "Query32": "INSERT INTO CUSTOMER VALUES ('C00010', 'Charles', 'Hampshair', 'Hampshair', 'UK', '3', '6000.00', '4000.00', '5000.00', '5000.00', 'MMMMMMM', 'A009')",
        "Query33": "INSERT INTO CUSTOMER VALUES ('C00017', 'Srinivas', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '4000.00', '3000.00', '9000.00', 'AAAAAAB', 'A007')",
        "Query34": "INSERT INTO CUSTOMER VALUES ('C00012', 'Steven', 'San Jose', 'San Jose', 'USA', '1', '5000.00', '7000.00', '9000.00', '3000.00', 'KRFYGJK', 'A012')",
        "Query35": "INSERT INTO CUSTOMER VALUES ('C00008', 'Karolina', 'Torento', 'Torento', 'Canada', '1', '7000.00', '7000.00', '9000.00', '5000.00', 'HJKORED', 'A004')",
        "Query36": "INSERT INTO CUSTOMER VALUES ('C00003', 'Martin', 'Torento', 'Torento', 'Canada', '2', '8000.00', '7000.00', '7000.00', '8000.00', 'MJYURFD', 'A004')",
        "Query37": "INSERT INTO CUSTOMER VALUES ('C00009', 'Ramesh', 'Mumbai', 'Mumbai', 'India', '3', '8000.00', '7000.00', '3000.00', '12000.00', 'Phone No', 'A002')",
        "Query38": "INSERT INTO CUSTOMER VALUES ('C00014', 'Rangarappa', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '11000.00', '7000.00', '12000.00', 'AAAATGF', 'A001')",
        "Query39": "INSERT INTO CUSTOMER VALUES ('C00016', 'Venkatpati', 'Bangalore', 'Bangalore', 'India', '2', '8000.00', '11000.00', '7000.00', '12000.00', 'JRTVFDD', 'A007')",
        "Query40": "INSERT INTO CUSTOMER VALUES ('C00011', 'Sundariya', 'Chennai', 'Chennai', 'India', '3', '7000.00', '11000.00', '7000.00', '11000.00', 'PPHGRTS', 'A010')",
        "Query41": "COMMIT",
        "Query42": "UPDATE Agents SET commission=commission+.02 WHERE 2>=(SELECT COUNT(cust_code) FROM Customer WHERE customer.agent_code=agents.agent_code)",
        "Query43": "COMMIT"
      }
    ]
  },
  "Test17": {
    "Name": "E161 SQL comments using leading double minus",
    "Case": [
      {
        "NameCase": "E161 SQL comments using leading double minus",
        "Query1": "SELECT Cust_code FROM Customer --Comments from query",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test18": {
    "Name": "E171 SQLSTATE support",
    "Case": [
      {
        "NameCase": "E171 SQLSTATE support",
        "Query1": "UPDATE table_1 SET table_1_row_1 = 15 WHERE table_1_row_2 = 3",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test19": {
    "Name": "E182 Host language binding",
    "Case": [
      {
        "NameCase": "E182 Host language binding",
        "Query1": "COMMIT"
      }
    ]
  },
  "Test20": {
    "Name": "F31 Basic schema manipulation",
    "Case": [
      {
        "NameCase": "F31-01 CREATE TABLE statement to\ncreate persistent base tables",
        "Query1": "CREATE TABLE F31_01 (ROW_ID INT NOT NULL PRIMARY KEY,ROW_NAME CHAR(40), ROW_AREA CHAR(35), ROW_NUM NUMERIC(10,2), ROW_CHAR CHAR(15), ROW_CHAR1 VARCHAR(25))",
        "Query2": "COMMIT",
        "Query3": "COMMENT ON TABLE F31_01 IS 'F31-01 CREATE TABLE statement'",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "F31-02 CREATE VIEW statement",
        "Query1": "CREATE VIEW F31_01_VIEW AS SELECT * FROM F31_01",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F31-03 GRANT statement",
        "Query1": "GRANT SELECT, DELETE ON F31_01 TO E081_09 WITH GRANT OPTION",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F31-04 GRALTER TABLE statement:\nADD COLUMN clause",
        "Query1": "ALTER TABLE F31_01 ADD NEW_COL VARCHAR(25)",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F31-13 DROP TABLE statement:\nRESTRICT clause",
        "Query1": "DROP TABLE F31_01 RESTRICT",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F31-14 DROP VIEW statement:\nRESTRICT clause",
        "Query1": "DROP VIEW F31_01_ RESTRICT",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F31-19 REVOKE statement:\nRESTRICT clause",
        "Query1": "REVOKE SELECT ON F31_01 FROM E081_09 RESTRICT",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test21": {
    "Name": "F041 Basic joined table",
    "Case": [
      {
        "NameCase": "F041-01 Inner join (but not necessarily\nthe INNER keyword)",
        "Query1": "SELECT a.agent_name, c.cust_name FROM customer c JOIN agents a ON a.agent_code = c.agent_code",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F041-02 INNER keyword",
        "Query1": "CREATE TABLE A( A INT, B INT, C INT)",
        "Query2": "COMMIT",
        "Query3": "CREATE TABLE B( A INT, B INT, D INT)",
        "Query4": "COMMIT",
        "Query5": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD FROM A INNER JOIN B ON A.B <= B.B",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "F041-03 LEFT OUTER JOIN",
        "Query1": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A LEFT JOIN B ON A.B = B.B",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F041-04 RIGHT OUTER JOIN",
        "Query1": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B = B.B",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F041-05 Outer joins can be nested",
        "Query1": "SELECT a.agent_name, c.cust_name FROM customer c RIGHT JOIN (select * from agents where commission > 0.13) a ON a.agent_code = c.agent_code",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F041-07 Outer joins can be nested",
        "Query1": "SELECT a.agent_name, c.cust_name FROM customer c RIGHT JOIN\n(select c.cust_name, a.agent_name, a.agent_code from customer c right join agents a ON a.agent_code = c.agent_code\nand a.commission > 0.13 where c.payment_amt > 5000) a\nON a.agent_code = c.agent_code",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F041-08 All comparison operators are\nsupported (rather than just =)",
        "Query1": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B < B.B",
        "Query2": "COMMIT",
        "Query3": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B > B.B",
        "Query4": "COMMIT",
        "Query5": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B != B.B",
        "Query6": "COMMIT",
        "Query7": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B <= B.B",
        "Query8": "COMMIT",
        "Query9": "SELECT A.A AS AA, A.B AS AB, A.C AS AC, B.A AS BA, B.B AS BB, B.D AS BD\nFROM A RIGHT JOIN B ON A.B => B.B",
        "Query10": "COMMIT"
      }
    ]
  },
  "Test22": {
    "Name": "F051 Basic date and time",
    "Case": [
      {
        "NameCase": "F051-01 DATE data type (including\nsupport of DATE literal).",
        "Query1": "CREATE TABLE F51_01 (ROW_ID INT NOT NULL,ROW_DATE1 DATE,ROW_DATE2 DATE,ROW_DATE3 DATE)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_01 VALUES ('0', '06.09.22',CURRENT_DATE,'09.12.99')",
        "Query4": "COMMIT",
        "Query5": "INSERT INTO F51_01 VALUES ('1', CURRENT_DATE,'11.05.02','14.09.13')",
        "Query6": "COMMIT",
        "Query7": "INSERT INTO F51_01 VALUES ('2', '01.01.00','13.06.23',CURRENT_DATE)",
        "Query8": "COMMIT"
      },
      {
        "NameCase": "F051-02 TIME data type (including\nsupport of TIME literal) with\nfractional seconds precision of\nat least 0.",
        "Query1": "CREATE TABLE F51_02 (ROW_ID INT NOT NULL,ROW_TIME1 TIME,ROW_TIME2 TIME,ROW_TIME3 TIME)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_02 VALUES ('0', CURRENT_TIME,'23:11:00.00','14:32:00.00')",
        "Query4": "COMMIT",
        "Query5": "INSERT INTO F51_02 VALUES ('1', '16:54:11.12','13:59:32.14',CURRENT_TIME)",
        "Query6": "COMMIT",
        "Query7": "INSERT INTO F51_02 VALUES ('2', '08:12:00.13',CURRENT_TIME,'00:00:00.01')",
        "Query8": "COMMIT"
      },
      {
        "NameCase": "F051-03 TIMESTAMP data type\n(including support of TIMESTAMP\nliteral) with fractional\nseconds precision of at least 0\nand 6.",
        "Query1": "CREATE TABLE F51_03 (ROW_ID INT NOT NULL,ROW_TIMESTAMP1 TIMESTAMP,ROW_TIMESTAMP2 TIMESTAMP,ROW_TIMESTAMP3 TIMESTAMP)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_03 VALUES ('0', CURRENT_TIMESTAMP,'12.12.12 00:15:01.03','14.03.17 19:15:01.00')",
        "Query4": "COMMIT",
        "Query5": "INSERT INTO F51_03 VALUES ('1', '03.03.85 00:32:12.03','01.01.99 00:15:01.03',CURRENT_TIMESTAMP)",
        "Query6": "COMMIT",
        "Query7": "INSERT INTO F51_03 VALUES ('2', '14.03.17 19:15:01.00',CURRENT_TIMESTAMP,'14.02.05 12:03:25.99')",
        "Query8": "COMMIT"
      },
      {
        "NameCase": "F051-04 Comparison predicate on\nDATE, TIME, and TIMESTAMP\ndata types.",
        "Query1": "SELECT * FROM F51_01 WHERE ROW_DATE1 > ROW_DATE3",
        "Query2": "COMMIT",
        "Query3": "SELECT * FROM F51_01 WHERE ROW_DATE2 = ROW_DATE3",
        "Query4": "COMMIT",
        "Query5": "SELECT * FROM F51_01 WHERE ROW_DATE3 < ROW_DATE2",
        "Query6": "COMMIT",
        "Query7": "SELECT * FROM F51_02 WHERE ROW_TIME1 > ROW_TIME3",
        "Query8": "COMMIT",
        "Query9": "SELECT * FROM F51_02 WHERE ROW_TIME2 = ROW_TIME3",
        "Query10": "COMMIT",
        "Query11": "SELECT * FROM F51_02 WHERE ROW_TIME3 < ROW_TIME2",
        "Query12": "COMMIT",
        "Query13": "SELECT * FROM F51_03 WHERE ROW_TIMESTAMP1 > ROW_TIMESTAMP3",
        "Query14": "COMMIT",
        "Query15": "SELECT * FROM F51_03 WHERE ROW_TIMESTAMP2 = ROW_TIMESTAMP3",
        "Query16": "COMMIT",
        "Query17": "SELECT * FROM F51_03 WHERE ROW_TIMESTAMP3 < ROW_TIMESTAMP2",
        "Query18": "COMMIT"
      },
      {
        "NameCase": "F051-05 Explicit CAST between datetime\ntypes and character string\ntypes.",
        "Query1": "CREATE TABLE F51_05 (ROW_ID INT NOT NULL,ROW_DATE1 CHAR(20),ROW_DATE2 DATE,ROW_DATE3 TIME,ROW_DATE4 TIMESTAMP)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_05 VALUES ('0', CAST(CURRENT_DATE as DATE),CAST('10.02.2022' as CHAR(10)),CAST(CURRENT_TIMESTAMP as TIME),CAST (CURRENT_DATE as TIMESTAMP))",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "F051-06 CURRENT_DATE",
        "Query1": "CREATE TABLE F51_06 (ROW_ID INT NOT NULL,ROW_DATE1 TIME,ROW_DATE2 DATE,ROW_DATE3 TIMESTAMP)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_06 VALUES ('0', CURRENT_TIME, CURRENT_DATE, CURRENT_TIMESTAMP)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "F051-07 LOCALTIME",
        "Query1": "CREATE TABLE F51_07 (ROW_ID INT NOT NULL,ROW_DATE1 TIME)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_07 VALUES ('0', LOCALTIME)",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "F051-08 LOCALTIME",
        "Query1": "CREATE TABLE F51_08 (ROW_ID INT NOT NULL,ROW_DATE1 TIMESTAMP)",
        "Query2": "COMMIT",
        "Query3": "INSERT INTO F51_08 VALUES ('0', LOCALTIMESTAMP)",
        "Query4": "COMMIT"
      }
    ]
  },
  "Test23": {
    "Name": "F081 UNION and EXCEPT in\nviews",
    "Case": [
      {
        "NameCase": "F081-01 UNION in views",
        "Query1": "CREATE view F081_UNION (model,price)as select model,price from computers union select model,price from laptop",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F081-02 EXCEPT in views",
        "Query1": "CREATE view F082_EXCEPT (model,price)as select model,price from computers except select model,price from laptop",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test24": {
    "Name": "F131 UNION and EXCEPT in\nviews",
    "Case": [
      {
        "NameCase": "F131-01 WHERE, GROUP BY, and\nHAVING clauses supported in\nqueries with grouped views",
        "Query1": "CREATE view F131_01 (model,price,speedcpu,ram,hdd,namecompany)as select model,price,speedcpu,ram,hdd,namecompany from computers union select model,price,speedcpu,ram,hdd,namecompany from laptop",
        "Query2": "COMMIT",
        "Query3": "SELECT * FROM F131_01 WHERE price > 1000",
        "Query4": "COMMIT",
        "Query5": "SELECT COUNT(model), namecompany FROM F131_01 GROUP BY namecompany",
        "Query6": "COMMIT",
        "Query7": "SELECT namecompany FROM F131_01 WHERE price > 1000 GROUP BY namecompany HAVING COUNT(model) > 2",
        "Query8": "COMMIT"
      },
      {
        "NameCase": "F131-02 Multiple tables supported in\nqueries with grouped views",
        "Query1": "CREATE view F131_02 (namecompany, typeproduct) as select namecompany, typeproduct from company",
        "Query2": "COMMIT",
        "Query3": "SELECT a.namecompany, b.typeproduct FROM F131_01 a, F131_02 b GROUP BY a.namecompany, b.typeproduct",
        "Query4": "COMMIT"
      },
      {
        "NameCase": "F131-03 Set functions supported in\nqueries with grouped views",
        "Query1": "SELECT MAX(price) FROM F131_01",
        "Query2": "COMMIT",
        "Query3": "SELECT MIN(speedcpu) FROM F131_01",
        "Query4": "COMMIT",
        "Query5": "SELECT COUNT(model) FROM F131_01 WHERE namecompany = 'DELL'",
        "Query6": "COMMIT"
      },
      {
        "NameCase": "F131-04 Subqueries with GROUP BY\nand HAVING clauses and\ngrouped views",
        "Query1": "SELECT namecompany FROM F131_01 WHERE price > 500 and model = (SELECT model FROM f131_01 WHERE price > 500 GROUP BY model HAVING COUNT(model) > 2)",
        "Query2": "COMMIT"
      },
      {
        "NameCase": "F131-05 Single row SELECT with\nGROUP BY and HAVING\nclauses and grouped views",
        "Query1": "SELECT namecompany FROM F131_01 WHERE price > 1000 GROUP BY namecompany HAVING COUNT(model) > 3",
        "Query2": "COMMIT"
      }
    ]
  },
  "Test25": {
    "Name": "F181 Multiple module support",
    "Case": [
      {
        "NameCase": "F181 Multiple module support",
        "Query1": "COMMIT"
      }
    ]
  }
}